<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.lr.service.testdemo</groupId>
  <artifactId>test-demo</artifactId>
  <version>1.0.0</version>

  <packaging>jar</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <java.version>1.8</java.version>
    <spring-cloud.version>Greenwich.SR3</spring-cloud.version>
    <spring-boot.version>2.1.8.RELEASE</spring-boot.version>
    <mybatis-spring-boot-starter.version>1.3.1</mybatis-spring-boot-starter.version>
    <druid-spring-boot-starter.version>1.1.10</druid-spring-boot-starter.version>
    <fastjson.version>1.2.61</fastjson.version>
    <lombok.version>1.16.20</lombok.version>
    <poi-ooxml.version>3.7</poi-ooxml.version>
    <commons-lang3>3.7</commons-lang3>
    <commons-codec>1.13</commons-codec>
    <commons-collections.version>3.2.2</commons-collections.version>
    <guava.version>29.0-jre</guava.version>
    <!-- maven -setting -->
    <maven-compiler-plugin.version>3.6.0</maven-compiler-plugin.version>
    <maven-build-timestamp.format>yyyy-MM-dd HH:mm:ss</maven-build-timestamp.format>
    <maven-compile-source>1.8</maven-compile-source>
    <maven-compile-target>1.8</maven-compile-target>


    <maven-source-plugin>3.0.1</maven-source-plugin>
    <maven-javadoc-plugin>2.10.3</maven-javadoc-plugin>
    <maven-gpg-plugin>1.6</maven-gpg-plugin>

  </properties>

  <dependencies>
    <!--升级到3.2.2-->
    <dependency>
      <groupId>commons-collections</groupId>
      <artifactId>commons-collections</artifactId>
      <version>${commons-collections.version}</version>
      <scope>compile</scope>
    </dependency>

   <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-properties-migrator</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-eureka-client</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.mybatis.spring.boot</groupId>
      <artifactId>mybatis-spring-boot-starter</artifactId>
      <version>${mybatis-spring-boot-starter.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>druid-spring-boot-starter</artifactId>
      <version>${druid-spring-boot-starter.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>com.alibaba</groupId>
      <artifactId>fastjson</artifactId>
      <version>${fastjson.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.poi</groupId>
      <artifactId>poi-ooxml</artifactId>
      <version>${poi-ooxml.version}</version>
      <scope>compile</scope>
     </dependency>

    <!--如果没用就注销，否则需要在bootstrap.yml中配置config server -->
   <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-config</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-openfeign</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-starter-netflix-ribbon</artifactId>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>${lombok.version}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-lang3</artifactId>
      <version>${commons-lang3}</version>
      <scope>compile</scope>
    </dependency>
    <dependency>
      <groupId>mysql</groupId>
      <artifactId>mysql-connector-java</artifactId>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
    </dependency>
    <!-- https://mvnrepository.com/artifact/commons-codec/commons-codec -->
    <dependency>
      <groupId>commons-codec</groupId>
      <artifactId>commons-codec</artifactId>
      <version>${commons-codec}</version>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.retry</groupId>
      <artifactId>spring-retry</artifactId>
      <scope>compile</scope>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.google.guava/guava -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${guava.version}</version>
    </dependency>
    <dependency>
      <groupId>joda-time</groupId>
      <artifactId>joda-time</artifactId>
      <version>2.9.4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.7</version>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>${spring-boot.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <scope>import</scope>
        <type>pom</type>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <!--完整包-->
        <executions>
          <execution>
            <goals>
              <goal>repackage</goal>
            </goals>
          </execution>
        </executions>
        <!--        <configuration>
                  <layout>ZIP</layout>
                  <includes>
                    <include>
                      <groupId>nothing</groupId>
                      <artifactId>nothing</artifactId>
                    </include>
                  </includes>
                </configuration>-->
      </plugin>
      <!--依赖包分离-->
      <!--    <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-dependency-plugin</artifactId>
            <version>3.1.1</version>
            <executions>
              <execution>
                <id>copy-dependencies</id>
                <phase>package</phase>
                <goals>
                  <goal>copy-dependencies</goal>
                </goals>
                <configuration>
                  <outputDirectory>target/lib</outputDirectory>
                  <excludeGroupIds>
                  </excludeGroupIds>
                  <overWriteSnapshots>true</overWriteSnapshots>
                </configuration>
              </execution>
            </executions>
          </plugin>-->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${maven-compiler-plugin.version}</version>
        <configuration>
          <source>${maven-compile-source}</source>
          <target>${maven-compile-target}</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
    </plugins>
    <resources>
      <resource>
        <directory>src/main/resources</directory>
        <filtering>true</filtering>
      </resource>
      <resource>
        <directory>src/main/java</directory>
        <includes>
          <include>**/*.yml</include>
        </includes>
      </resource>
    </resources>
  </build>

  <profiles>
    <!--本地环境-->
    <profile>
      <id>local</id>
      <properties>
        <spring.profiles.active>local</spring.profiles.active>
        <loggers.file.name>${project.build.finalName}</loggers.file.name>
      </properties>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
    </profile>

    <!--开发环境-->
    <profile>
      <id>dev</id>
      <properties>
        <spring.profiles.active>dev</spring.profiles.active>
        <loggers.file.name>${project.build.finalName}</loggers.file.name>
      </properties>
    </profile>
    <!--测试环境-->
    <profile>
      <id>test</id>
      <properties>
        <loggers.file.name>${project.build.finalName}</loggers.file.name>
        <spring.profiles.active>test</spring.profiles.active>
      </properties>
    </profile>
    <!--正式环境-->
    <profile>
      <id>prod</id>
      <properties>
        <spring.profiles.active>prod</spring.profiles.active>
        <loggers.file.name>${project.build.finalName}</loggers.file.name>
      </properties>
    </profile>
    <!--双活环境-->
    <profile>
      <id>aa</id>
      <properties>
        <loggers.file.name>${project.build.finalName}</loggers.file.name>
        <spring.profiles.active>aa</spring.profiles.active>
      </properties>
    </profile>
  </profiles>
</project>
